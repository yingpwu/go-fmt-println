{
    "name": "go-fmt-println",
    "displayName": "GO FMT Println",
    "description": "Automating the process of writing meaningful log messages.",
    "version": "2.3.1",
    "publisher": "yingpwu",
    "author": "",
    "engines": {
        "vscode": "^1.50.0"
    },
    "icon": "images/icon.png",
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onCommand:gofmt.displayLogMessage",
        "onCommand:gofmt.commentAllLogMessages",
        "onCommand:gofmt.uncommentAllLogMessages",
        "onCommand:gofmt.deleteAllLogMessages"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "GO FMT Configuration",
            "properties": {
                "gofmt.wrapLogMessage": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determine if the log message should be wrapped or not."
                },
                "gofmt.logMessagePrefix": {
                    "type": "string",
                    "default": "ðŸš€",
                    "description": "The prefix of the log message."
                },
                "gofmt.includeFileNameAndLineNum": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to include the file name and the line number of the log message."
                },
                "gofmt.addSemicolonInTheEnd": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to add or not a semicolon in the end of the log message."
                },
                "gofmt.insertEnclosingClass": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to insert or not the enclosing class of the selected variable in the log message."
                },
                "gofmt.insertEnclosingFunction": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to insert or not the enclosing function of the selected variable in the log message."
                },
                "gofmt.delimiterInsideMessage": {
                    "type": "string",
                    "default": "~",
                    "description": "The delimiter that will separate the different log message elements (file name, line number, class, function and variable)"
                },
                "gofmt.quote": {
                    "type": "string",
                    "enum": [
                        "\"",
                        "'",
                        "`"
                    ],
                    "default": "\"",
                    "description": "Double quotes, single quotes or backtick"
                }
            }
        },
        "commands": [
            {
                "command": "gofmt.displayLogMessage",
                "title": "GO FMT: Display Log Message"
            },
            {
                "command": "gofmt.commentAllLogMessages",
                "title": "GO FMT: Comment All Log Messages"
            },
            {
                "command": "gofmt.uncommentAllLogMessages",
                "title": "GO FMT: Uncomment All Log Messages"
            },
            {
                "command": "gofmt.deleteAllLogMessages",
                "title": "GO FMT: Delete All Log Messages"
            }
        ],
        "keybindings": [
            {
                "command": "gofmt.displayLogMessage",
                "key": "ctrl+alt+l",
                "mac": "ctrl+alt+l"
            },
            {
                "command": "gofmt.commentAllLogMessages",
                "key": "alt+shift+c",
                "mac": "alt+shift+c"
            },
            {
                "command": "gofmt.uncommentAllLogMessages",
                "key": "alt+shift+u",
                "mac": "alt+shift+u"
            },
            {
                "command": "gofmt.deleteAllLogMessages",
                "key": "alt+shift+d",
                "mac": "alt+shift+d"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "yarn run compile",
        "compile": "tsc -p ./ ",
        "compilea": "tsc -p ./ && mkdir -p out/test/files/js && cp -r src/test/files/js out/test/files",
        "lint": "eslint src --ext ts",
        "watch": "tsc -watch -p ./",
        "pretest": "yarn run compile && yarn run lint",
        "test": "node ./out/test/runTest.js",
        "generateTest": "ts-node ./src/test/generator.ts"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.0.0",
        "@types/node": "^12.11.7",
        "@types/vscode": "^1.50.0",
        "@typescript-eslint/eslint-plugin": "^4.1.1",
        "@typescript-eslint/parser": "^4.1.1",
        "chalk": "^4.1.0",
        "eslint": "^7.9.0",
        "eslint-plugin-prettier": "^3.1.4",
        "glob": "^7.1.6",
        "mocha": "^8.1.3",
        "typescript": "^4.0.2",
        "vscode-test": "^1.4.0"
    },
    "license": "SEE LICENSE IN LICENSE.txt",
    "bugs": {
        "url": "https://github.com/sachinsmc/GO-FMT/issues",
        "email": "chavansachin295@gmail.com"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/sachinsmc/GO-FMT"
    },
    "keywords": [
        "golang",
        "log",
        "debug",
        "fmt",
        "go",
        "println",
        "logger"
    ]
}
